{"version":3,"sources":["..\\..\\..\\..\\assets\\scripts/assets\\scripts\\Player.js"],"names":["cc","Class","extends","Component","properties","jumpHeight","jumpDuration","maxMoveSpeed","accel","squashDuration","jumpAudio","default","type","AudioClip","onLoad","jumpAction","setJumpAction","node","runAction","accLeft","accRight","xSpeed","maxX","game","width","minX","systemEvent","on","SystemEvent","EventType","KEY_DOWN","onKeyDown","KEY_UP","onKeyUp","onDestroy","off","start","jumpUp","moveBy","v2","easing","easeCubicActionOut","jumpDown","easeCubicActionIn","squash","scaleTo","stretch","scaleBack","callback","callFunc","playJumpSound","repeatForever","sequence","audioEngine","playEffect","event","keyCode","macro","KEY","left","right","update","dt","Math","abs","x"],"mappings":"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","file":"Player.js","sourceRoot":"..\\..\\..\\..\\assets\\scripts","sourcesContent":["// Learn cc.Class:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/class.html\r\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] https://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // foo: {\r\n        //     // ATTRIBUTES:\r\n        //     default: null,        // The default value will be used only when the component attaching\r\n        //                           // to a node for the first time\r\n        //     type: cc.SpriteFrame, // optional, default is typeof default\r\n        //     serializable: true,   // optional, default is true\r\n        // },\r\n        // bar: {\r\n        //     get () {\r\n        //         return this._bar;\r\n        //     },\r\n        //     set (value) {\r\n        //         this._bar = value;\r\n        //     }\r\n        // },\r\n        jumpHeight: 0,\r\n        jumpDuration: 0,\r\n        maxMoveSpeed: 0,\r\n        accel: 0,\r\n        // 辅助形变动作时间\r\n        squashDuration: 0,\r\n // scoring sound effect resource\r\n        jumpAudio: {\r\n            default: null,\r\n            type: cc.AudioClip\r\n        },\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n     onLoad () {\r\n        this.jumpAction = this.setJumpAction();\r\n        this.node.runAction(this.jumpAction);\r\n        this.accLeft = false;\r\n        this.accRight = false;\r\n        this.xSpeed = 0;\r\n        this.maxX=this.game.node.width/2-this.node.width/2;\r\n        this.minX=-this.game.node.width/2+this.node.width/2;\r\n\r\n        cc.systemEvent.on(cc.SystemEvent.EventType.KEY_DOWN, this.onKeyDown, this);\r\n        cc.systemEvent.on(cc.SystemEvent.EventType.KEY_UP, this.onKeyUp, this);   \r\n\t },\r\n\t onDestroy () {\r\n        cc.systemEvent.off(cc.SystemEvent.EventType.KEY_DOWN, this.onKeyDown, this);\r\n        cc.systemEvent.off(cc.SystemEvent.EventType.KEY_UP, this.onKeyUp, this);\r\n    },\r\n    start () {\r\n\r\n    },\r\n    setJumpAction: function () {\r\n      // 跳跃上升\r\n             var jumpUp = cc.moveBy(this.jumpDuration, cc.v2(0, this.jumpHeight)).easing(cc.easeCubicActionOut());\r\n             // 下落\r\n             var jumpDown = cc.moveBy(this.jumpDuration, cc.v2(0, -this.jumpHeight)).easing(cc.easeCubicActionIn());\r\n             // 形变\r\n             var squash = cc.scaleTo(this.squashDuration, 1, 0.6);\r\n             var stretch = cc.scaleTo(this.squashDuration, 1, 1.2);\r\n             var scaleBack = cc.scaleTo(this.squashDuration, 1, 1);\r\n             // 添加一个回调函数，用于在动作结束时调用我们定义的其他方法\r\n             var callback = cc.callFunc(this.playJumpSound, this);\r\n             // 不断重复，而且每次完成落地动作后调用回调来播放声音\r\n             return cc.repeatForever(cc.sequence(squash, stretch, jumpUp, scaleBack, jumpDown, callback));\r\n    },\r\n\r\n    playJumpSound: function () {\r\n        // 调用声音引擎播放声音\r\n        cc.audioEngine.playEffect(this.jumpAudio, false);\r\n    },\r\n\r\n\tonKeyDown (event) {\r\n        switch(event.keyCode) {\r\n            case cc.macro.KEY.left:\r\n                this.accLeft = true;\r\n                break;\r\n            case cc.macro.KEY.right:\r\n                this.accRight = true;\r\n                break;\r\n        }\r\n    },\r\n\r\n    onKeyUp (event) {\r\n        // unset a flag when key released\r\n        switch(event.keyCode) {\r\n            case cc.macro.KEY.left:\r\n                this.accLeft = false;\r\n                break;\r\n            case cc.macro.KEY.right:\r\n                this.accRight = false;\r\n                break;\r\n        }\r\n    },\r\n   update (dt) {\r\n    // 根据当前加速度方向每帧更新速度\r\n           if (this.accLeft) {\r\n               this.xSpeed -= this.accel * dt;\r\n           } else if (this.accRight) {\r\n               this.xSpeed += this.accel * dt;\r\n           }\r\n           // 限制主角的速度不能超过最大值\r\n           if ( Math.abs(this.xSpeed) > this.maxMoveSpeed ) {\r\n               // if speed reach limit, use max speed with current direction\r\n               this.xSpeed = this.maxMoveSpeed * this.xSpeed / Math.abs(this.xSpeed);\r\n           }\r\n\r\n           // 根据当前速度更新主角的位置\r\n           this.node.x += this.xSpeed * dt;\r\n           if(this.node.x<this.minX){\r\n               this.xSpeed=0;\r\n               this.node.x=this.minX;\r\n           }else if(this.node.x>this.maxX){\r\n                 this.xSpeed=0;\r\n                 this.node.x=this.maxX;\r\n           }\r\n           },\r\n});\r\n"]}